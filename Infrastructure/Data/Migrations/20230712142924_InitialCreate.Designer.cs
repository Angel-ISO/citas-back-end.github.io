// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(CitasContext))]
    [Migration("20230712142924_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Entitities.Acudiente", b =>
                {
                    b.Property<int>("Attendant_cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Attendant_address")
                        .HasColumnType("longtext");

                    b.Property<string>("Attendant_fullname")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Attendant_telephone")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Attendant_cod");

                    b.ToTable("Acudientes", (string)null);
                });

            modelBuilder.Entity("Core.Entitities.Cita", b =>
                {
                    b.Property<int>("Appointment_cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Appointment_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Appointment_Userdata")
                        .HasColumnType("int");

                    b.Property<int>("Appointment_doctor")
                        .HasColumnType("int");

                    b.Property<int>("Appointment_state")
                        .HasColumnType("int");

                    b.HasKey("Appointment_cod");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("Core.Entitities.Consultorio", b =>
                {
                    b.Property<int>("Constroom_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Constroom_name")
                        .HasColumnType("longtext");

                    b.HasKey("Constroom_code");

                    b.ToTable("Consultorios");
                });

            modelBuilder.Entity("Core.Entitities.Especialidad", b =>
                {
                    b.Property<int>("Speciality_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Speciality_name")
                        .HasColumnType("longtext");

                    b.HasKey("Speciality_id");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("Core.Entitities.Estado_cita", b =>
                {
                    b.Property<int>("Appointmenstate_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Appointmenstate_name")
                        .HasColumnType("longtext");

                    b.HasKey("Appointmenstate_id");

                    b.ToTable("Estado_Citas");
                });

            modelBuilder.Entity("Core.Entitities.Genero", b =>
                {
                    b.Property<int>("Gen_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Gen_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Gen_abbreviation")
                        .HasColumnType("longtext");

                    b.HasKey("Gen_Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Core.Entitities.Medico", b =>
                {
                    b.Property<int>("Doctor_tuition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Doctor_consroom")
                        .HasColumnType("int");

                    b.Property<string>("Doctor_fullName")
                        .HasColumnType("longtext");

                    b.Property<int>("Doctor_speciality")
                        .HasColumnType("int");

                    b.HasKey("Doctor_tuition");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("Core.Entitities.Tipo_documento", b =>
                {
                    b.Property<int>("Typedoc_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Typedoc_abbreviation")
                        .HasColumnType("longtext");

                    b.Property<string>("Typedoc_nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Typedoc_id");

                    b.ToTable("Tipo_Documentos");
                });

            modelBuilder.Entity("Core.Entitities.Usuario", b =>
                {
                    b.Property<int>("Usu_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Usu_address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Usu_attendant")
                        .HasColumnType("int");

                    b.Property<string>("Usu_email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Usu_first_last_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Usu_gender")
                        .HasColumnType("int");

                    b.Property<string>("Usu_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usu_second_last_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Usu_second_name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Usu_telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Usu_type_document")
                        .HasColumnType("int");

                    b.HasKey("Usu_id");

                    b.ToTable("Usuarios", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
